{"version":3,"sources":["reducers/UserReducer.js","components/Form.jsx","components/TableUser.jsx","components/User.jsx","components/Header.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["UserReducer","state","action","type","payload","filter","val","id","Form","dispatch","useState","nombre","apellido","rut","email","telefono","data","setData","handleChange","e","target","value","actionAdd","uuid","className","onChange","onClick","TableUser","users","map","us","idUs","slice","name","User","useReducer","Header","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6eb906e6.chunk.js","sourcesContent":["export const UserReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      return [...state, action.payload];\r\n\r\n    case \"delete\":\r\n      return state.filter((val) => val.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nconst Form = ({ dispatch }) => {\r\n  const [data, setData] = useState({\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    rut: \"\",\r\n    email: \"\",\r\n    telefono: \"\",\r\n  });\r\n\r\n  const { nombre, apellido, rut, email, telefono } = data;\r\n\r\n  const handleChange = (e) => {\r\n    setData({\r\n      ...data,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n  \r\n  const actionAdd = {\r\n    type: \"add\",\r\n    payload: {\r\n      id: uuid(),\r\n      nombre,\r\n      apellido,\r\n      rut,\r\n      email,\r\n      telefono,\r\n    },\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    dispatch(actionAdd);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row container\">\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s6\">\r\n            <input\r\n              id=\"nombre\"\r\n              type=\"text\"\r\n              className=\"validate\"\r\n              value={nombre}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Nombre</label>\r\n          </div>\r\n          <div className=\"input-field col s6\">\r\n            <input\r\n              id=\"apellido\"\r\n              type=\"text\"\r\n              className=\"validate\"\r\n              value={apellido}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Apellido</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s6\">\r\n            <input\r\n              id=\"rut\"\r\n              type=\"text\"\r\n              className=\"validate\"\r\n              value={rut}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Rut</label>\r\n          </div>\r\n          <div className=\"input-field col s6\">\r\n            <input\r\n              id=\"telefono\"\r\n              type=\"text\"\r\n              className=\"validate\"\r\n              value={telefono}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Telefono</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s9 \">\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              className=\"validate\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n            <label>Email</label>\r\n          </div>\r\n          <div className=\"input-field col s3 \">\r\n            <button\r\n              className=\"btn waves-effect waves-light\"\r\n              type=\"submit\"\r\n              onClick={handleAdd}\r\n            >\r\n              Agregar\r\n              <i className=\"material-icons right\">add</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst TableUser = ({ users, dispatch }) => {\r\n  const handleDelete = (id) => {\r\n    const actionDelete = {\r\n      type: \"delete\",\r\n      payload: id,\r\n    };\r\n\r\n    dispatch(actionDelete);\r\n  };\r\n\r\n  return (\r\n    <table className=\"responsive-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <th>Apellido</th>\r\n          <th>Rut</th>\r\n          <th>Email</th>\r\n          <th>Telefono</th>\r\n          <th>Acci√≥n</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users.map((us) => {\r\n          const idUs = us.id.slice(0, 6);\r\n          return (\r\n            <tr key={us.id}>\r\n              <th>{idUs} </th>\r\n              <td>{us.nombre}</td>\r\n              <td>{us.apellido}</td>\r\n              <td>{us.rut}</td>\r\n              <td>{us.email}</td>\r\n              <td>{us.telefono}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn waves-effect red darken\"\r\n                  type=\"delete\"\r\n                  name=\"action\"\r\n                  onClick={() => handleDelete(us.id)}\r\n                >\r\n                  <i className=\"material-icons\">close</i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableUser;\r\n","import React, { useReducer } from \"react\";\r\nimport { UserReducer } from \"../reducers/UserReducer\";\r\nimport Form from \"./Form\";\r\nimport TableUser from \"./TableUser\";\r\n\r\n\r\nconst User = () => {\r\n  const [state, dispatch] = useReducer(UserReducer, []);\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <Form dispatch={dispatch} />\r\n      <TableUser users={state} dispatch={dispatch}></TableUser>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper teal lighten-4\">\r\n        <span className=\"brand-logo center\">Formulario Usuario - AlterCap</span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport Form from \"./components/User\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <>\n      <Header></Header>\n      <Form></Form>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}